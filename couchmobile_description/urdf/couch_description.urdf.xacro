<?xml version="1.0" ?>

<robot name="googly_john" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- CONSTS -->
    <xacro:property name="PI" value="3.14159265359"/>

<!-- ROBOT DIMENSIONS -->
    <xacro:property name="wheel_separation" value="0.60"/>

<!-- SIMULATION PROPERTIES -->
    <xacro:property name="controller_fps" value="40"/>


    <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
    </material>
    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>
    <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
    </material>

    <link name="base_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.8 0.8 0.1"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="10"/>
            <inertia
                ixx="1.0" ixy="0.0" ixz="0.0"
                iyy="1.0" iyz="0.0"
                izz="1.0"/>
        </inertial>
    </link>

    <joint name="base_link_to_seating" type="fixed">
        <parent link="base_link"/>
        <child link="seating"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="seating">
        <visual>
            <origin xyz="0 0 0.4" rpy="0 0 0"/>
            <geometry>
                <box size="0.8 0.8 0.8"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <origin xyz="0 0 0.4" rpy="0 0 0"/>
            <geometry>
                <box size="1 1 0.8"/>
            </geometry>
        </collision>
        <inertial>
            <origin xyz="0 0 0.4" rpy="0 0 0"/>
            <mass value="10"/>
            <inertia
                ixx="1.0" ixy="0.0" ixz="0.0"
                iyy="1.0" iyz="0.0"
                izz="1.0"/>
        </inertial>
    </link>

    <xacro:include filename="$(find couchmobile_description)/urdf/wheel.macro.xacro"/>
    
    <xacro:wheel prefix="RM" parent="base_link">
        <origin xyz="0 ${wheel_separation/2} 0" rpy="0 0 ${PI/2}" />   
    </xacro:wheel>
    
    <xacro:wheel prefix="RF" parent="base_link">
        <origin xyz="0.2 ${wheel_separation/2} 0" rpy="0 0 ${PI/2}" />   
    </xacro:wheel>

    <xacro:wheel prefix="RB" parent="base_link">
        <origin xyz="-0.2 ${wheel_separation/2} 0" rpy="0 0 ${PI/2}" />   
    </xacro:wheel>

    <xacro:wheel prefix="LM" parent="base_link">
        <origin xyz="0 -${wheel_separation/2} 0" rpy="0 0 ${PI/2}" />   
    </xacro:wheel>
    
    <xacro:wheel prefix="LF" parent="base_link">
        <origin xyz="0.2 -${wheel_separation/2} 0" rpy="0 0 ${PI/2}" />   
    </xacro:wheel>

    <xacro:wheel prefix="LB" parent="base_link">
        <origin xyz="-0.2 -${wheel_separation/2} 0" rpy="0 0 ${PI/2}" />   
    </xacro:wheel>

    <xacro:wheel_transmission prefix="LM" parent="base_link"/>
    <xacro:wheel_transmission prefix="RM" parent="base_link"/>
    <xacro:wheel_transmission prefix="LF" parent="base_link"/>
    <xacro:wheel_transmission prefix="RF" parent="base_link"/>
    <xacro:wheel_transmission prefix="LB" parent="base_link"/>
    <xacro:wheel_transmission prefix="RB" parent="base_link"/>

    <joint name="seating_to_pole" type="fixed">
        <parent link="seating"/>
        <child link="pole"/>
        <origin xyz="-0.4 -0.4 0" rpy="0 0 0" />
    </joint>

    <link name="pole">
        <visual>
            <origin xyz="0 0 1"/>
            <geometry>
                <box size="0.1 0.1 2"/>
            </geometry>
            <material name="grey"/>
        </visual>
    </link>
    <!-- LASER DEFINITION -->
    <joint name="pole_to_laser" type="fixed">
        <parent link="pole"/>
        <child link="laser"/>
        <origin xyz="0 0 2" rpy="0 0 0" />
        <axis xyz="0 0 1" />
    </joint>

    <link name="laser">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://couchmobile_description/meshes/hokuyo.dae"/>
            </geometry>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <!-- laser simulation -->
    <gazebo reference="laser">
        <sensor type="gpu_ray" name="head_hokuyo_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-2.0944</min_angle>
                        <max_angle>2.0944</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>4.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
                   <mean>0.0</mean>
                   <stddev>0.01</stddev>
               </noise>
           </ray>
           <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
               <topicName>/scan</topicName>
               <frameName>laser</frameName>
           </plugin>
       </sensor>
   </gazebo>

<!-- CAMERA DEFINITION -->
<!-- CAMERA SIMULATION -->
    <xacro:include filename="$(find realsense_gazebo_plugin)/urdf/realsense-d435.macro.xacro"/>
    <!-- Create camera instance -->
    <xacro:sensor-d435 prefix="" parent="pole">
        <origin xyz="0 0 2.2" rpy="0 0 0" />   
    </xacro:sensor-d435>


<!-- IMU DEFINITION -->
    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.2 0.1 0.002"/>
            </geometry>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="0.02"/>
            <inertia
                ixx="0.0001" ixy="0.0" ixz="0.0"
                iyy="0.0001" iyz="0.0"
                izz="0.0001"/>
        </inertial>
    </link>

    <joint name="base_to_imu" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <axis xyz="0 0 0" />
    </joint>
<!-- IMU SIMULATION -->

    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>10.0</updateRateHZ>
                <gaussianNoise>0.0</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>

<!-- DRIVE SIMULATION -->

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        </plugin>
    </gazebo>
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>${controller_fps}</updateRate>
            <leftJoint>base_link_to_LM_wheel base_link_to_LF_wheel base_link_to_LB_wheel</leftJoint>
            <rightJoint>base_link_to_RM_wheel base_link_to_RF_wheel base_link_to_RB_wheel</rightJoint>
            <wheelSeparation>0.60</wheelSeparation>
            <wheelDiameter>0.154</wheelDiameter>
            <torque>20</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom_truth</odometryTopic>
            <odometryFrame>odom_truth</odometryFrame>
            <robotBaseFrame>base_link</robotBaseFrame>
        </plugin>
    </gazebo>
<!--
    <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>100.0</updateRate>
            <leftFrontJoint>LF_wheel</leftFrontJoint>
            <rightFrontJoint>RF_wheel</rightFrontJoint>
            <leftRearJoint>LB_wheel</leftRearJoint>
            <rightRearJoint>RB_wheel</rightRearJoint>
            <wheelSeparation>0.6</wheelSeparation>
            <wheelDiameter>0.154</wheelDiameter>
            <robotBaseFrame>base_link</robotBaseFrame>
            <torque>20</torque>
            <topicName>cmd_vel</topicName>
            <broadcastTF>false</broadcastTF>
        </plugin>
    </gazebo>
    -->
</robot>
